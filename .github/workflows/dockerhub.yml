name: DockerHub release

on:
  push:
    branches:
      - main


env:
  IMAGE_NAME: undeadgrishnackh/berlin_clock
  PLATFORMS: linux/amd64,linux/arm64


jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: 🔐 Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: 🔒Generate Lock File for dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pipenv
          pipenv lock

      - name: 🧪 Run unit, integration, and e2e tests inside the docker container
        run: |
          docker build -t ${{ env.IMAGE_NAME }}:test --target test -f ./Dockerfile.test .

      - name: 🚓 Gate - Hadolint
        run: |
          docker run --rm -i -v ${{ github.workspace }}/.hadolint.yaml:/.config/hadolint.yaml hadolint/hadolint < Dockerfile

      - name: 🚓 Gate - Chef InSpec
        run: |
          echo "🧪 🐳 DockerFile structure"
          echo "🔌 Installation Inspec.io"
          export CHEF_LICENSE=accept-silent
          curl https://omnitruck.chef.io/install.sh | sudo bash -s -- -P inspec
          echo "📁 run DockerFile structure test..."
          inspec exec tests/release/inspec/dockerfile

      - name: ⚙️ Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: ⚙️ Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: ⚙️ Build Docker image
        run: |
          pipenv lock
          docker buildx create --use
          docker buildx build --progress=plain --platform=${{ env.PLATFORMS }} --tag ${{ env.IMAGE_NAME }}:build -f Dockerfile . --push --no-cache

      - name: 🚓 Gate - Google Container Structure Tests
        run: |
          echo "🧪 🧬 Container Structure Test"
          echo "🔌 Installation Container Structure Test"
          curl -LO https://storage.googleapis.com/container-structure-test/latest/container-structure-test-linux-amd64
          chmod +x container-structure-test-linux-amd64
          sudo mv container-structure-test-linux-amd64 /usr/local/bin/container-structure-test
          echo "📁 run container structure test on $(acr_url)/$(image_name):$(build_tag)"
          container-structure-test test --config test/container-structure/components.yaml --output text --image ${{ env.IMAGE_NAME }}:build

      - name: 🚓 Check - Dive
        run: |
          wget https://github.com/wagoodman/dive/releases/download/v0.9.2/dive_0.9.2_linux_amd64.deb
          sudo apt install ./dive_0.9.2_linux_amd64.debdocker pull quay.io/wagoodman/dive:latest
          CI=true dive ${{ env.IMAGE_NAME }}:build

      - name: 🚓 Check - Anchor
        run: |
          docker pull quay.io/goodwithtech/anchor:latest
          docker run --rm \
            -v $(pwd):/src \
            -w /src \
            quay.io/goodwithtech/anchor:latest \
              check

      - name: Tag Docker image
        run: |
          docker tag ${{ env.IMAGE_NAME }}:build ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}:latest
          docker images

      - name: Push Docker image to Docker Hub
        run: |
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}:latest