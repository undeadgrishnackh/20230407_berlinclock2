name: CI/CD build pipeline with quality gate and coverage

on: [push]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.8", "3.9", "3.10"]
    steps:
    - uses: actions/checkout@v3

    - name: 🐍 Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}

    - name: 👷‍ Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pipenv
        pipenv install --deploy --dev

    - name: 🕵️‍ PyLint
      run: |
        pipenv run linterCheck

    - name: 🤖 Tests - 🧪 Unit - 🔌 Integration - 👩🏻‍💻 E2E
      run: |
        pipenv run coverageCICDPipeline

    - name: Analyze with SonarCloud

      uses: SonarSource/sonarcloud-github-action@v2.1.1  # version at https://github.com/marketplace/actions/sonarcloud-scan?version=v1.9.1

      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      with:
        args:
          -Dsonar.projectKey=undeadgrishnackh_20230407_berlinclock2
          -Dsonar.organization=undeadgrishnackh
          # Comma-separated paths to directories containing main source files.
          #-Dsonar.sources= # optional, default is project base directory
          # When you need the analysis to take place in a directory other than the one from which it was launched
          #-Dsonar.projectBaseDir= # optional, default is .
          # Comma-separated paths to directories containing test source files.
          #-Dsonar.tests= # optional. For more info about Code Coverage, please refer to https://docs.sonarcloud.io/enriching/test-coverage/overview/
        # Adds more detail to both client and server-side analysis logs, activating DEBUG mode for the scanner, and adding client-side environment variables and system properties to the server-side log of analysis report processing.
        #-Dsonar.verbose= # optional, default is false
